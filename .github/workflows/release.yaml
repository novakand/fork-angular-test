name: release

on:
   push:
     branches:
     - master

jobs:
  create-releases:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
      with:
        ref: master
    
    - name: Checkout
      env:
        USER_GITHUB_TOKEN: ${{ secrets.USER_GITHUB_TOKEN }}
      run: |
        git checkout master
        git remote rm origin
        git remote add origin "https://$GITHUB_ACTOR:$USER_GITHUB_TOKEN@github.com/$GITHUB_REPOSITORY.git"
        git fetch --all
        git pull origin master --ff-only
        git config --local user.email "me@gabrielbull.com"
        git config --local user.name "Gabriel Bull"

    - name: Install node
      uses: actions/setup-node@v1
      with:
        node-version: 14
  
    - name: Get yarn cache directory
      id: yarn-cache
      run: echo "::set-output name=dir::$(yarn config get globalFolder | sed 's/\/berry$//')"

    - name: Cache yarn
      uses: actions/cache@v2
      with:
        path: |
          ${{ steps.yarn-cache.outputs.dir }}
          .yarn/cache
          .yarn/build-state.yml
          .yarn/install-state.gz
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - name: Cache node_modules
      uses: actions/cache@v2
      id: node_modules
      with:
        path: |
          **/node_modules
        key: ${{ runner.os }}-node_modules-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-node_modules-

    - name: Install node_modules
      if: steps.node_modules.outputs.cache-hit != 'true'
      run: |
        yarn install --immutable

    - name: Build
      run: yarn prepare

    - name: Create releases
      run: |
        npx lerna version -y -m "chore(release): publish" --changelog-preset angular --conventional-commits --create-release github
        git stash
      env:
        GH_TOKEN: ${{ secrets.USER_GITHUB_TOKEN }}
        NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        USER_GITHUB_TOKEN: ${{ secrets.USER_GITHUB_TOKEN }}

    - name: Publish to NPM
      run: |
        echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > .npmrc
        npx lerna publish -y from-package
        rm .npmrc
      env:
        GH_TOKEN: ${{ secrets.USER_GITHUB_TOKEN }}
        NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        USER_GITHUB_TOKEN: ${{ secrets.USER_GITHUB_TOKEN }}

    - name: Publish to Github Repository
      run: |
        echo "//npm.pkg.github.com/:_authToken=$USER_GITHUB_TOKEN" > .npmrc
        npx lerna publish -y from-package --registry https://npm.pkg.github.com/renavigation2
        rm .npmrc
      env:
        GH_TOKEN: ${{ secrets.USER_GITHUB_TOKEN }}
        NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        USER_GITHUB_TOKEN: ${{ secrets.USER_GITHUB_TOKEN }}
